// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/track-many/{courier}/{ids}": {
            "get": {
                "description": "Track many packages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracking"
                ],
                "summary": "Track many packages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier name",
                        "name": "courier",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Package ids",
                        "name": "ids",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.TrackingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "Internal"
                        }
                    }
                }
            }
        },
        "/track-one/{courier}/{id}": {
            "get": {
                "description": "Track one package",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tracking"
                ],
                "summary": "Track one package",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier name",
                        "name": "courier",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Package id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.TrackingError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "Internal"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Data": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/main.Package"
                    }
                },
                "error": {
                    "$ref": "#/definitions/main.TrackingError"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "main.Location": {
            "type": "object",
            "properties": {
                "datetime": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "main.Package": {
            "type": "object",
            "properties": {
                "courier_icon": {
                    "type": "string"
                },
                "courier_name": {
                    "type": "string"
                },
                "delivered": {
                    "type": "boolean"
                },
                "found": {
                    "type": "boolean"
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.Location"
                    }
                }
            }
        },
        "main.TrackingError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
